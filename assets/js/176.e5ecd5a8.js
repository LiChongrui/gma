(window.webpackJsonp=window.webpackJsonp||[]).push([[176],{715:function(t,s,n){"use strict";n.r(s);var a=n(9),e=Object(a.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"gma-rasp-basic-deformation-infiles-outfile-cutlinefile-none-resamplemethod-0-resolution-none-outprojection-wgs84-innodata-none-outnodata-none-outformat-gtiff"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#gma-rasp-basic-deformation-infiles-outfile-cutlinefile-none-resamplemethod-0-resolution-none-outprojection-wgs84-innodata-none-outnodata-none-outformat-gtiff"}},[t._v("#")]),t._v(" gma.rasp.Basic."),n("strong",[t._v("Deformation")]),t._v("("),n("em",[t._v("InFiles, OutFile, CutLineFile = None, ResampleMethod = 0, Resolution = None, OutProjection = 'WGS84',  InNoData = None, OutNoData = None, OutFormat = 'GTiff'")]),t._v(")")]),t._v(" "),n("hr"),t._v(" "),n("p",[n("strong",[t._v("功能：")]),t._v("【流程化处理】。完成镶嵌-裁剪-重采样-重投影-格式转换等其中一个或多个功能。")]),t._v(" "),n("p",[n("strong",[t._v("参数：")])]),t._v(" "),n("p",[t._v(" InFiles："),n("code",[t._v("str||list")]),t._v("。输入栅格路径。如果为列表，则列表内所有的栅格将被 镶嵌。")]),t._v(" "),n("p",[t._v(" OutFile："),n("code",[t._v("str")]),t._v("。输出栅格路径。")]),t._v(" "),n("p",[n("strong",[t._v("可选参数：")])]),t._v(" "),n("p",[t._v(" CutLineFile  = "),n("code",[t._v("str")]),t._v("。裁剪矢量文件路径。如果有，将用此 矢量文件 裁剪输出栅格。")]),t._v(" "),n("p",[t._v(" Resolution  = "),n("code",[t._v("float")]),t._v("。重采样分辨率。设置重采样分辨率。")]),t._v(" "),n("p",[t._v(" ResampleMethod  = "),n("code",[t._v("int||str")]),t._v("。重采样方法。默认为 Nearest Neighbour 法（0）。其他重采样方法详见 Resample 函数。")]),t._v(" "),n("p",[t._v(" OutProjection = "),n("code",[t._v("str")]),t._v("。输出栅格坐标系名称。输出栅格坐标系（EPSG 、 wkb 或 坐标名称）。")]),t._v(" "),n("p",[t._v(" InNoData  = "),n("code",[t._v("float")]),t._v("。输出无效值。输出栅格的无效值。")]),t._v(" "),n("p",[t._v(" OutNoData  = "),n("code",[t._v("float")]),t._v("。输出无效值。默认与 InNoData 的无效值相同（None）。")]),t._v(" "),n("p",[t._v(" OutFormat   = "),n("code",[t._v("str")]),t._v("。输出栅格文件格式。默认为 GTiff，其他格式详见 ToOtherFormat 函数。")]),t._v(" "),n("div",{staticClass:"custom-block warning"},[n("p",{staticClass:"title"},[t._v("注意")]),n("p",[t._v("此函数的效率比单独的 镶嵌、裁剪、重采样、重投影、格式转换 函数低！")])]),n("hr"),t._v(" "),n("p",[n("strong",[t._v("示例：")])]),t._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" gma "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" rasp\n\nInFile "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ESA_LC2020_Luoyang.tif'")]),t._v("\nCutLineFile "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Chanhe.shp'")]),t._v("\nOutFile "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ESA_LC2020_Luoyang_Chanhe.tif'")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 执行裁剪、重采样、重投影过程")]),t._v("\nrasp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Basic"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Deformation"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("InFile"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" OutFile"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n                       CutLineFile "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" CutLineFile"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n                       ResampleMethod "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'CubicSpline'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n                       OutProjection "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3857")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br")])])])}),[],!1,null,null,null);s.default=e.exports}}]);