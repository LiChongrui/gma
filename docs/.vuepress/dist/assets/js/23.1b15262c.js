(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{563:function(t,s,o){"use strict";o.r(s);var v=o(9),r=Object(v.a)({},(function(){var t=this,s=t.$createElement,o=t._self._c||s;return o("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[o("p",[o("font",{attrs:{color:"#616AE5"}},[o("i",{staticClass:"fas fa-award"})]),t._v(" "),o("strong",[t._v("新增：")])],1),t._v(" "),o("p",[t._v(" 　1、增加【"),o("RouterLink",{attrs:{to:"/UserGuide/rasp/AddColorTable.html"}},[t._v("AddColorTable")]),t._v("】函数")],1),t._v(" "),o("p",[t._v(" 　　为栅格数据添加色彩映射表。引用：gma.rasp.AddColorTable。")]),t._v(" "),o("p",[o("font",{attrs:{color:"#3CB371"}},[o("i",{staticClass:"fab fa-superpowers"})]),t._v(" "),o("strong",[t._v("优化：")])],1),t._v(" "),o("p",[t._v(" 　1、GTiff 格式")]),t._v(" "),o("p",[t._v(" 　　a. 生成 GTiff 过程使用差分预测器（若压缩支持，例如 LZW ），修改默认压缩级别为 9 级 。")]),t._v(" "),o("p",[t._v(" 　　b. 生成 GTiff 过程调用全部 CPU 核心。")]),t._v(" "),o("p",[t._v(" 　　c. 当读取的栅格数据未压缩大小小于系统内存时，改用 RasterIO 方法实现。")]),t._v(" "),o("p",[t._v(" 　2、内存占用")]),t._v(" "),o("p",[t._v(" 　　默认处理过程的最大内存占用为 "),o("strong",[t._v("0.9 * 空闲内存")]),t._v("，以提高数据处理速度。")]),t._v(" "),o("p",[t._v(" 　3、.ovr 金字塔")]),t._v(" "),o("p",[t._v(" 　　生成 .ovr 金字塔 过程使用差分预测器（ DEFLATE 压缩）。")]),t._v(" "),o("p",[o("font",{attrs:{color:"#FFA500"}},[o("i",{staticClass:"fas fa-tools"})]),t._v(" "),o("strong",[t._v("修复：")])],1),t._v(" "),o("p",[t._v(" 　1、修正 WKT 坐标系正确性的检查方式。")])])}),[],!1,null,null,null);s.default=r.exports}}]);