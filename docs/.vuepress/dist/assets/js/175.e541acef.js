(window.webpackJsonp=window.webpackJsonp||[]).push([[175],{712:function(t,s,a){"use strict";a.r(s);var e=a(9),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"gma-rasp-decompose-splitimage-infile-outpath-size-256-lap-0-fillvalue-none"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gma-rasp-decompose-splitimage-infile-outpath-size-256-lap-0-fillvalue-none"}},[t._v("#")]),t._v(" gma.rasp.Decompose."),a("strong",[t._v("SplitImage")]),t._v("("),a("em",[t._v("InFile, OutPath, Size=256, Lap=0, FillValue=None")]),t._v(")")]),t._v(" "),a("hr"),t._v(" "),a("p",[a("strong",[t._v("功能：")]),t._v("【影像切片】。将一幅影像切分为特定行列数的小影像（切片）。")]),t._v(" "),a("p",[a("strong",[t._v("参数：")])]),t._v(" "),a("p",[t._v(" InFile："),a("code",[t._v("str")]),t._v("。输入栅格路径。")]),t._v(" "),a("p",[t._v(" OutPath："),a("code",[t._v("str")]),t._v("。输出文件夹路径。")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"title"},[t._v("提示")]),a("p",[t._v("输出切片会自动命名。命名规则：")]),t._v(" "),a("p",[t._v(" <输入文件名>_<切片左边界>_<切片上边界>.<驱动扩展名>")])]),a("p",[a("strong",[t._v("可选参数：")])]),t._v(" "),a("p",[t._v(" Size = "),a("code",[t._v("int")]),t._v("。切片大小。切片结果的行列数大小。默认为 256。")]),t._v(" "),a("p",[t._v(" Lap = "),a("code",[t._v("int")]),t._v("。输出相邻切片的重叠度，默认不重叠（0）。")]),t._v(" "),a("p",[t._v(" FillValue = "),a("code",[t._v("None||float||'AUTO'")]),t._v("。边缘切片不足 Size 大小时的处理方法。默认忽略边缘值（None）。")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"title"},[t._v("不同参数的含义")]),a("ul",[a("li",[a("p",[t._v("None: （默认设置）忽略边缘值。不会进行扩展，不足 Size 大小的部分切片时将被舍弃。")])]),t._v(" "),a("li",[a("p",[t._v("float: 不足 Size 的部分将用此值填充。")])]),t._v(" "),a("li",[a("p",[t._v("AUTO: 不足 Size 的部分将用输入栅格的 NoData 值填充。若 NoData不存在，则自动尝试扩展填充值。")])])])]),a("hr"),t._v(" "),a("p",[a("strong",[t._v("示例：")])]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" gma "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" rasp\n\nInFile "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ESA_LC2020_Luoyang.tif'")]),t._v("\nOutPath "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'SplitImage'")]),t._v("\n\nrasp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Decompose"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SplitImage"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("InFile"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" OutPath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Size "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2048")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])])])}),[],!1,null,null,null);s.default=n.exports}}]);