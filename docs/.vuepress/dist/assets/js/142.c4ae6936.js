(window.webpackJsonp=window.webpackJsonp||[]).push([[142],{682:function(a,t,s){"use strict";s.r(t);var n=s(9),e=Object(n.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h2",{attrs:{id:"gma-math-prepro-fillnodata-data-fillvalue-none-method-linear-axis-none-kwargs"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#gma-math-prepro-fillnodata-data-fillvalue-none-method-linear-axis-none-kwargs"}},[a._v("#")]),a._v(" gma.math.PrePro."),s("strong",[a._v("FillNoData")]),a._v("("),s("em",[a._v("Data, FillValue = None, Method = 'linear', Axis = None, **kwargs")]),a._v(")")]),a._v(" "),s("hr"),a._v(" "),s("p",[s("strong",[a._v("功能：")]),a._v("【填充缺失值】。对缺失值或异常值值进行插值替换。")]),a._v(" "),s("p",[s("strong",[a._v("参数：")])]),a._v(" "),s("p",[a._v(" Data："),s("code",[a._v("list||tuple||Series||DataFrame||array")]),a._v(" 。需要插补的数据。")]),a._v(" "),s("p",[s("strong",[a._v("可选参数：")])]),a._v(" "),s("p",[a._v(" FillValue = "),s("code",[a._v("float||list")]),a._v("。 需要进行插补的缺失值。默认不设置（None）。")]),a._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"title"},[a._v("注意")]),s("ol",[s("li",[s("p",[a._v("当 FillValue 为列表时，列表内所有值都将被插补。")])]),a._v(" "),s("li",[s("p",[a._v("数据内原有的NAN、INF以及不能被转化为数字的字符串等异常值也将被插补。")])])])]),s("p",[a._v(" Method = "),s("code",[a._v("str")]),a._v("。 插补方法。默认线性插值（linear）。")]),a._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"title"},[a._v("其他插补方法")]),s("p",[a._v("index（索引）, values（序列值），pad（前向填充），nearest（最邻近），zero（零值），slinear（滑动线性），quadratic（2次方），cubic（3次方），spline（样条函数），barycentric（重心），polynomial（分段多项式），from_derivatives（衍生），krogh（克罗格），piecewise_polynomial（分段多项式），pchip（分段三次 Hermite 多项式插值），akima（akima 光滑插值），cubicspline（3次样条）等。")])]),s("p",[a._v(" Axis = "),s("code",[a._v("int")]),a._v(" "),s("Badge",{attrs:{text:"1.0.8"}}),a._v(" 。数据插补使用的轴。默认（None）数据小于 3 维以第 1 个维度为轴，高于 3 维以倒数第 3 个维度为轴。")],1),a._v(" "),s("p",[a._v(" **kwargs。传递给插值函数的其他参数。例如：Method 为 polynomial 或 spline 需要设置 order（阶数），默认阶数为 3。")]),a._v(" "),s("p",[s("strong",[a._v("返回：")]),a._v(" Series，DataFrame 返回 "),s("code",[a._v("输入类型")]),a._v("；list，tuple，array 返回 "),s("code",[a._v("array")]),a._v("。")]),a._v(" "),s("hr"),a._v(" "),s("p",[s("strong",[a._v("示例：")])]),a._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("from")]),a._v(" gma "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("import")]),a._v(" math\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[s("em",[a._v("序列（1 维）")])]),a._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[a._v("Data "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0.16359164")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0.17469311")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'NULL'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0.22857143")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0.32706435")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0.10225949")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 未定义需要被填充的值则仅插值序列中的非数据值以及无穷值")]),a._v("\nmath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("PrePro"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("FillNoData"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("Data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("blockquote",[s("p",[a._v(">>> array([0.16359164, 0.16359164, 0.17469311, 0.20163227, 0.22857143, 0.32706435, 10.0, 0.10225949])")])]),a._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"title"},[a._v("提示")]),s("p",[a._v("不能处理边缘缺失值的插补方法（例如 linear 等）函数默认采用邻近值填充边缘缺失值！如有特定需求，请在插补前自行处理！")])]),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 定义了需要被填充的值后此值也会被填充。不存在的值则自动忽略")]),a._v("\nmath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("PrePro"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("FillNoData"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("Data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" FillValue "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])]),s("blockquote",[s("p",[a._v(">>> array([0.16359164, 0.16359164, 0.17469311, 0.20163227, 0.22857143, 0.32706435, 0.21466192, 0.10225949])")])])])}),[],!1,null,null,null);t.default=e.exports}}]);