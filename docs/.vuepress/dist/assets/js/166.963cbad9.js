(window.webpackJsonp=window.webpackJsonp||[]).push([[166],{704:function(t,a,n){"use strict";n.r(a);var s=n(9),e=Object(s.a)({},(function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"gma-rasp-basic-clip-infile-outfile-cutlinefile-layerid-0-featureid-none-innodata-none-outnodata-none-outformat-gtiff"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#gma-rasp-basic-clip-infile-outfile-cutlinefile-layerid-0-featureid-none-innodata-none-outnodata-none-outformat-gtiff"}},[t._v("#")]),t._v(" gma.rasp.Basic."),n("strong",[t._v("Clip")]),t._v("("),n("em",[t._v("InFile, OutFile, CutLineFile, LayerID = 0, FeatureID = None, InNoData = None, OutNoData = None, OutFormat = 'GTiff'")]),t._v(")")]),t._v(" "),n("hr"),t._v(" "),n("p",[n("strong",[t._v("功能：")]),t._v("【裁剪】。按矢量边界裁剪栅格。")]),t._v(" "),n("p",[n("strong",[t._v("参数：")])]),t._v(" "),n("p",[t._v(" InFile："),n("code",[t._v("str")]),t._v("。输入栅格路径。")]),t._v(" "),n("p",[t._v(" OutFile："),n("code",[t._v("str")]),t._v("。输出栅格路径。")]),t._v(" "),n("p",[t._v(" CutLineFile："),n("code",[t._v("str")]),t._v("。裁剪矢量文件路径。")]),t._v(" "),n("p",[n("strong",[t._v("可选参数：")])]),t._v(" "),n("p",[t._v(" LayerID = "),n("code",[t._v("int")]),t._v(" "),n("Badge",{attrs:{text:"1.0.7 +"}}),t._v(" 。输入裁剪矢量的图层 ID。默认第一个图层（0）。")],1),t._v(" "),n("p",[t._v(" FeatureID = "),n("code",[t._v("list")]),t._v(" "),n("Badge",{attrs:{text:"1.0.7 +"}}),t._v(" 。掩膜图层的要素 ID。默认掩膜全部要素（None）。")],1),t._v(" "),n("p",[t._v(" InNoData = "),n("code",[t._v("float")]),t._v("。输入栅格的无效值。默认不指定（None）无效值。")]),t._v(" "),n("p",[t._v(" OutNoData  = "),n("code",[t._v("float")]),t._v("。输出栅格的无效值。默认不指定（None）无效值。")]),t._v(" "),n("p",[t._v(" OutFormat  = "),n("code",[t._v("str")]),t._v("。输出栅格文件格式。默认为 GTiff，其他格式详见 ToOtherFormat 函数。")]),t._v(" "),n("hr"),t._v(" "),n("p",[n("strong",[t._v("示例：")])]),t._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" gma "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" rasp\n\nInFile "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ESA_LC2020_Luoyang.tif'")]),t._v("\nCutLineFile "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Chanhe.shp'")]),t._v("\nOutFile "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ESA_LC2020_Luoyang_Chanhe.tif'")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 定义裁剪结果路径并执行裁剪，并为边界外数据分配无数据值")]),t._v("\nrasp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Basic"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Clip"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("InFile"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" OutFile"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" CutLineFile"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" OutNoData "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br")])]),n("blockquote",[n("p",[t._v("原始数据与裁剪结果：")])]),t._v(" "),n("p",[n("img",{attrs:{src:"/rasp/Clip.png",alt:""}})])])}),[],!1,null,null,null);a.default=e.exports}}]);