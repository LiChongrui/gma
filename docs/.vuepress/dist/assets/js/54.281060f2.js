(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{594:function(t,s,a){"use strict";a.r(s);var o=a(9),n=Object(o.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[a("font",{attrs:{color:"#FF4500"}},[a("i",{staticClass:"fas fa-exclamation-circle"})]),t._v(" "),a("strong",[t._v("注意：此版本没有Linux版！")])],1),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("编译 gma 的 Linux 虚拟机崩溃了，暂时无法修复，本期 Linux 版暂停发布。")])])]),t._v(" "),a("p",[a("font",{attrs:{color:"#616AE5"}},[a("i",{staticClass:"fas fa-award"})]),t._v(" "),a("strong",[t._v("新增：")])],1),t._v(" "),a("p",[a("strong",[t._v(" 1、DataSet")]),t._v("：【重要更新！！！】新增数据集切片功能，可以按照 DataSet[波段序号/列表/slice, 行slice, 列slice] => DataSet 方式进行切片提取。")]),t._v(" "),a("p",[a("font",{attrs:{color:"#FFA500"}},[a("i",{staticClass:"fas fa-tools"})]),t._v(" "),a("strong",[t._v("调整：")])],1),t._v(" "),a("p",[a("strong",[t._v(" 1、默认波段序号")]),t._v("：为使栅格数据切片功能与 Python 内置切片逻辑匹配（从0开始），且保持库内各部分定义一致，所有包含波段序号的函数/方法或功能默认初始波段序号由1修改为0！")]),t._v(" "),a("p",[a("font",{attrs:{color:"#3CB371"}},[a("i",{staticClass:"fab fa-superpowers"})]),t._v(" "),a("strong",[t._v("优化：")])],1),t._v(" "),a("p",[a("strong",[t._v(" 1、map.plot.MapFrame")]),t._v("：大幅优化绘图效率。相较于 1.x，绘图速度提升超过10倍。")]),t._v(" "),a("p",[a("strong",[t._v(" 2、smc.Interpolate")]),t._v("：优化插值过程，在尽量不影响速度的前提下，大幅减少内存占用。")])])}),[],!1,null,null,null);s.default=n.exports}}]);