{"remainingRequest":"D:\\github\\gma\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\github\\gma\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\github\\gma\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!D:\\github\\gma\\node_modules\\@vuepress\\markdown-loader\\index.js??ref--1-2!D:\\github\\gma\\docs\\Explore\\Structure.md?vue&type=template&id=97b13b68&","dependencies":[{"path":"D:\\github\\gma\\docs\\Explore\\Structure.md","mtime":1656945766410},{"path":"D:\\github\\gma\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1656945766973},{"path":"D:\\github\\gma\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1656945769840},{"path":"D:\\github\\gma\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1656945766973},{"path":"D:\\github\\gma\\node_modules\\vue-loader\\lib\\index.js","mtime":1656945769839},{"path":"D:\\github\\gma\\node_modules\\@vuepress\\markdown-loader\\index.js","mtime":1656945766754}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}