{"remainingRequest":"D:\\github\\geoncs\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\github\\geoncs\\theme-reco\\components\\Navbar.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\github\\geoncs\\theme-reco\\components\\Navbar.vue","mtime":1644430206250},{"path":"D:\\github\\geoncs\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1644430203908},{"path":"D:\\github\\geoncs\\node_modules\\babel-loader\\lib\\index.js","mtime":1644430203846},{"path":"D:\\github\\geoncs\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1644430203908},{"path":"D:\\github\\geoncs\\node_modules\\vue-loader\\lib\\index.js","mtime":1644430206083}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgeyBkZWZpbmVDb21wb25lbnQsIHJlZiwgb25Nb3VudGVkLCBnZXRDdXJyZW50SW5zdGFuY2UsIGNvbXB1dGVkIH0gZnJvbSAndnVlLWRlbWknDQppbXBvcnQgQWxnb2xpYVNlYXJjaEJveCBmcm9tICdAQWxnb2xpYVNlYXJjaEJveCcNCmltcG9ydCBTZWFyY2hCb3ggZnJvbSAnQFNlYXJjaEJveCcNCmltcG9ydCBTaWRlYmFyQnV0dG9uIGZyb20gJ0B0aGVtZS9jb21wb25lbnRzL1NpZGViYXJCdXR0b24nDQppbXBvcnQgTmF2TGlua3MgZnJvbSAnQHRoZW1lL2NvbXBvbmVudHMvTmF2TGlua3MnDQppbXBvcnQgTW9kZSBmcm9tICdAdGhlbWUvY29tcG9uZW50cy9Nb2RlJw0KDQpleHBvcnQgZGVmYXVsdCBkZWZpbmVDb21wb25lbnQoew0KICBjb21wb25lbnRzOiB7IFNpZGViYXJCdXR0b24sIE5hdkxpbmtzLCBTZWFyY2hCb3gsIEFsZ29saWFTZWFyY2hCb3gsIE1vZGUgfSwNCg0KICBzZXR1cCAocHJvcHMsIGN0eCkgew0KICAgIGNvbnN0IGluc3RhbmNlID0gZ2V0Q3VycmVudEluc3RhbmNlKCkucHJveHkNCiAgICBjb25zdCBsaW5rc1dyYXBNYXhXaWR0aCA9IHJlZihudWxsKQ0KDQogICAgY29uc3QgYWxnb2xpYSA9IGNvbXB1dGVkKCgpID0+IHsNCiAgICAgIHJldHVybiBpbnN0YW5jZS4kdGhlbWVMb2NhbGVDb25maWcuYWxnb2xpYSB8fCBpbnN0YW5jZS4kdGhlbWVDb25maWcuYWxnb2xpYSB8fCB7fQ0KICAgIH0pDQoNCiAgICBjb25zdCBpc0FsZ29saWFTZWFyY2ggPSBjb21wdXRlZCgoKSA9PiB7DQogICAgICBhbGdvbGlhLnZhbHVlICYmIGFsZ29saWEudmFsdWUuYXBpS2V5ICYmIGFsZ29saWEudmFsdWUuaW5kZXhOYW1lDQogICAgfSkNCg0KICAgIGZ1bmN0aW9uIGNzcyAoZWwsIHByb3BlcnR5KSB7DQogICAgICAvLyBOT1RFOiBLbm93biBidWcsIHdpbGwgcmV0dXJuICdhdXRvJyBpZiBzdHlsZSB2YWx1ZSBpcyAnYXV0bycNCiAgICAgIGNvbnN0IHdpbiA9IGVsLm93bmVyRG9jdW1lbnQuZGVmYXVsdFZpZXcNCiAgICAgIC8vIG51bGwgbWVhbnMgbm90IHRvIHJldHVybiBwc2V1ZG8gc3R5bGVzDQogICAgICByZXR1cm4gd2luLmdldENvbXB1dGVkU3R5bGUoZWwsIG51bGwpW3Byb3BlcnR5XQ0KICAgIH0NCg0KICAgIG9uTW91bnRlZCgoKSA9PiB7DQogICAgICBjb25zdCBNT0JJTEVfREVTS1RPUF9CUkVBS1BPSU5UID0gNzE5IC8vIHJlZmVyIHRvIGNvbmZpZy5zdHlsDQogICAgICBjb25zdCBOQVZCQVJfVkVSVElDQUxfUEFERElORyA9DQogICAgICAgIHBhcnNlSW50KGNzcyhpbnN0YW5jZS4kZWwsICdwYWRkaW5nTGVmdCcpKSArDQogICAgICAgIHBhcnNlSW50KGNzcyhpbnN0YW5jZS4kZWwsICdwYWRkaW5nUmlnaHQnKSkNCg0KICAgICAgY29uc3QgaGFuZGxlTGlua3NXcmFwV2lkdGggPSAoKSA9PiB7DQogICAgICAgIGlmIChkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50V2lkdGggPCBNT0JJTEVfREVTS1RPUF9CUkVBS1BPSU5UKSB7DQogICAgICAgICAgbGlua3NXcmFwTWF4V2lkdGgudmFsdWUgPSBudWxsDQogICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgbGlua3NXcmFwTWF4V2lkdGgudmFsdWUgPQ0KICAgICAgICAgICAgaW5zdGFuY2UuJGVsLm9mZnNldFdpZHRoIC0NCiAgICAgICAgICAgIE5BVkJBUl9WRVJUSUNBTF9QQURESU5HIC0NCiAgICAgICAgICAgIChpbnN0YW5jZS4kcmVmcy5zaXRlTmFtZSAmJiBpbnN0YW5jZS4kcmVmcy5zaXRlTmFtZS5vZmZzZXRXaWR0aCB8fCAwKQ0KICAgICAgICB9DQogICAgICB9DQoNCiAgICAgIGhhbmRsZUxpbmtzV3JhcFdpZHRoKCkNCiAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdyZXNpemUnLCBoYW5kbGVMaW5rc1dyYXBXaWR0aCwgZmFsc2UpDQogICAgfSkNCg0KICAgIHJldHVybiB7IGxpbmtzV3JhcE1heFdpZHRoLCBhbGdvbGlhLCBpc0FsZ29saWFTZWFyY2gsIGNzcyB9DQogIH0NCn0pDQo="},{"version":3,"sources":["Navbar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"Navbar.vue","sourceRoot":"theme-reco/components","sourcesContent":["<template>\r\n  <header class=\"navbar\">\r\n    <SidebarButton @toggle-sidebar=\"$emit('toggle-sidebar')\"/>\r\n\r\n    <router-link\r\n      :to=\"$localePath\"\r\n      class=\"home-link\">\r\n      <img\r\n        class=\"logo\"\r\n        v-if=\"$themeConfig.logo\"\r\n        :src=\"$withBase($themeConfig.logo)\"\r\n        :alt=\"$siteTitle\">\r\n      <span\r\n        ref=\"siteName\"\r\n        class=\"site-name\"\r\n        v-if=\"$siteTitle\">{{ $siteTitle }}</span>\r\n    </router-link>\r\n\r\n    <div\r\n      class=\"links\"\r\n      :style=\"linksWrapMaxWidth ? {\r\n        'max-width': linksWrapMaxWidth + 'px'\r\n      } : {}\">\r\n\r\n      <Mode />\r\n      <AlgoliaSearchBox\r\n        v-if=\"isAlgoliaSearch\"\r\n        :options=\"algolia\"/>\r\n      <SearchBox v-else-if=\"$themeConfig.search !== false && $frontmatter.search !== false\"/>\r\n      <NavLinks class=\"can-hide\"/>\r\n    </div>\r\n  </header>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent, ref, onMounted, getCurrentInstance, computed } from 'vue-demi'\r\nimport AlgoliaSearchBox from '@AlgoliaSearchBox'\r\nimport SearchBox from '@SearchBox'\r\nimport SidebarButton from '@theme/components/SidebarButton'\r\nimport NavLinks from '@theme/components/NavLinks'\r\nimport Mode from '@theme/components/Mode'\r\n\r\nexport default defineComponent({\r\n  components: { SidebarButton, NavLinks, SearchBox, AlgoliaSearchBox, Mode },\r\n\r\n  setup (props, ctx) {\r\n    const instance = getCurrentInstance().proxy\r\n    const linksWrapMaxWidth = ref(null)\r\n\r\n    const algolia = computed(() => {\r\n      return instance.$themeLocaleConfig.algolia || instance.$themeConfig.algolia || {}\r\n    })\r\n\r\n    const isAlgoliaSearch = computed(() => {\r\n      algolia.value && algolia.value.apiKey && algolia.value.indexName\r\n    })\r\n\r\n    function css (el, property) {\r\n      // NOTE: Known bug, will return 'auto' if style value is 'auto'\r\n      const win = el.ownerDocument.defaultView\r\n      // null means not to return pseudo styles\r\n      return win.getComputedStyle(el, null)[property]\r\n    }\r\n\r\n    onMounted(() => {\r\n      const MOBILE_DESKTOP_BREAKPOINT = 719 // refer to config.styl\r\n      const NAVBAR_VERTICAL_PADDING =\r\n        parseInt(css(instance.$el, 'paddingLeft')) +\r\n        parseInt(css(instance.$el, 'paddingRight'))\r\n\r\n      const handleLinksWrapWidth = () => {\r\n        if (document.documentElement.clientWidth < MOBILE_DESKTOP_BREAKPOINT) {\r\n          linksWrapMaxWidth.value = null\r\n        } else {\r\n          linksWrapMaxWidth.value =\r\n            instance.$el.offsetWidth -\r\n            NAVBAR_VERTICAL_PADDING -\r\n            (instance.$refs.siteName && instance.$refs.siteName.offsetWidth || 0)\r\n        }\r\n      }\r\n\r\n      handleLinksWrapWidth()\r\n      window.addEventListener('resize', handleLinksWrapWidth, false)\r\n    })\r\n\r\n    return { linksWrapMaxWidth, algolia, isAlgoliaSearch, css }\r\n  }\r\n})\r\n</script>\r\n\r\n<style lang=\"stylus\">\r\n$navbar-vertical-padding = 0.7rem\r\n$navbar-horizontal-padding = 1.5rem\r\n\r\n.navbar\r\n  padding $navbar-vertical-padding $navbar-horizontal-padding\r\n  line-height $navbarHeight - 1.4rem\r\n  box-shadow var(--box-shadow)\r\n  background var(--background-color)\r\n  a, span, img\r\n    display inline-block\r\n  .logo\r\n    height $navbarHeight - 1.4rem\r\n    min-width $navbarHeight - 1.4rem\r\n    margin-right 0.8rem\r\n    vertical-align top\r\n    border-radius 50%\r\n  .site-name\r\n    font-size 1.2rem\r\n    font-weight 600\r\n    color var(--text-color)\r\n    position relative\r\n  .links\r\n    padding-left 1.5rem\r\n    box-sizing border-box\r\n    white-space nowrap\r\n    font-size 0.9rem\r\n    position absolute\r\n    right $navbar-horizontal-padding\r\n    top $navbar-vertical-padding\r\n    display flex\r\n    background-color var(--background-color)\r\n    .search-box\r\n      flex: 0 0 auto\r\n      vertical-align top\r\n\r\n@media (max-width: $MQMobile)\r\n  .navbar\r\n    padding-left 4rem\r\n    .can-hide\r\n      display none\r\n    .links\r\n      padding-left .2rem\r\n</style>\r\n"]}]}