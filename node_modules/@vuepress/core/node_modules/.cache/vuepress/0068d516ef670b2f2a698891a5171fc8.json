{"remainingRequest":"D:\\github\\gma\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\github\\gma\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\github\\gma\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!D:\\github\\gma\\node_modules\\@vuepress\\markdown-loader\\index.js??ref--1-2!D:\\github\\gma\\docs\\Functions\\Structure.md?vue&type=template&id=1a75aac4&","dependencies":[{"path":"D:\\github\\gma\\docs\\Functions\\Structure.md","mtime":1645453268076},{"path":"D:\\github\\gma\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1644569285654},{"path":"D:\\github\\gma\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1644569306479},{"path":"D:\\github\\gma\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1644569285654},{"path":"D:\\github\\gma\\node_modules\\vue-loader\\lib\\index.js","mtime":1644569306477},{"path":"D:\\github\\gma\\node_modules\\@vuepress\\markdown-loader\\index.js","mtime":1644569284335}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}