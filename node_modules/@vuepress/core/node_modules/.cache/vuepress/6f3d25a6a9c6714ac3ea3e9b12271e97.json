{"remainingRequest":"D:\\github\\geoncs\\node_modules\\babel-loader\\lib\\index.js??ref--3-1!D:\\github\\geoncs\\theme-reco\\components\\Mode\\applyMode.js","dependencies":[{"path":"D:\\github\\geoncs\\theme-reco\\components\\Mode\\applyMode.js","mtime":1644430206250},{"path":"D:\\github\\geoncs\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1644430203908},{"path":"D:\\github\\geoncs\\node_modules\\babel-loader\\lib\\index.js","mtime":1644430203846}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZGF0ZS50by1zdHJpbmcuanMiOwppbXBvcnQgbW9kZU9wdGlvbnMgZnJvbSAnLi9tb2RlT3B0aW9ucyc7CgpmdW5jdGlvbiByZW5kZXIobW9kZSkgewogIHZhciByb290RWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJzpyb290Jyk7CiAgdmFyIG9wdGlvbnMgPSBtb2RlT3B0aW9uc1ttb2RlXTsKICB2YXIgb3Bwb3NpdGUgPSBtb2RlID09PSAnZGFyaycgPyAnbGlnaHQnIDogJ2RhcmsnOwoKICBmb3IgKHZhciBrIGluIG9wdGlvbnMpIHsKICAgIHJvb3RFbGVtZW50LnN0eWxlLnNldFByb3BlcnR5KGssIG9wdGlvbnNba10pOwogIH0KCiAgcm9vdEVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZShvcHBvc2l0ZSk7CiAgcm9vdEVsZW1lbnQuY2xhc3NMaXN0LmFkZChtb2RlKTsKfQovKioNCiAqIFNldHMgYSBjb2xvciBzY2hlbWUgZm9yIHRoZSB3ZWJzaXRlLg0KICogSWYgYnJvd3NlciBzdXBwb3J0cyAicHJlZmVycy1jb2xvci1zY2hlbWUiLCAnYXV0bycgbW9kZSB3aWxsIHJlc3BlY3QgdGhlIHNldHRpbmcgZm9yIGxpZ2h0IG9yIGRhcmsgbW9kZQ0KICogb3RoZXJ3aXNlIGl0IHdpbGwgc2V0IGEgZGFyayB0aGVtZSBkdXJpbmcgbmlnaHQgdGltZQ0KICovCgoKZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gYXBwbHlNb2RlKG1vZGUpIHsKICBpZiAobW9kZSAhPT0gJ2F1dG8nKSB7CiAgICByZW5kZXIobW9kZSk7CiAgICByZXR1cm47CiAgfQoKICB2YXIgaXNEYXJrTW9kZSA9IHdpbmRvdy5tYXRjaE1lZGlhKCcocHJlZmVycy1jb2xvci1zY2hlbWU6IGRhcmspJykubWF0Y2hlczsKICB2YXIgaXNMaWdodE1vZGUgPSB3aW5kb3cubWF0Y2hNZWRpYSgnKHByZWZlcnMtY29sb3Itc2NoZW1lOiBsaWdodCknKS5tYXRjaGVzOwogIGlmIChpc0RhcmtNb2RlKSByZW5kZXIoJ2RhcmsnKTsKICBpZiAoaXNMaWdodE1vZGUpIHJlbmRlcignbGlnaHQnKTsKCiAgaWYgKCFpc0RhcmtNb2RlICYmICFpc0xpZ2h0TW9kZSkgewogICAgY29uc29sZS5sb2coJ+mFjeiJsuaWueahiOiuvue9ruW8guW4uOOAguaIkeS7rOW3suiHquWKqOiwg+aVtOmFjeiJsuaWueahiOOAgicpOwogICAgdmFyIGhvdXIgPSBuZXcgRGF0ZSgpLmdldEhvdXJzKCk7CiAgICBpZiAoaG91ciA8IDYgfHwgaG91ciA+PSAxOCkgcmVuZGVyKCdkYXJrJyk7ZWxzZSByZW5kZXIoJ2xpZ2h0Jyk7CiAgfQp9"},{"version":3,"sources":["D:/github/geoncs/theme-reco/components/Mode/applyMode.js"],"names":["modeOptions","render","mode","rootElement","document","querySelector","options","opposite","k","style","setProperty","classList","remove","add","applyMode","isDarkMode","window","matchMedia","matches","isLightMode","console","log","hour","Date","getHours"],"mappings":";AAAA,OAAOA,WAAP,MAAwB,eAAxB;;AAEA,SAASC,MAAT,CAAiBC,IAAjB,EAAuB;AACrB,MAAMC,WAAW,GAAGC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAApB;AACA,MAAMC,OAAO,GAAGN,WAAW,CAACE,IAAD,CAA3B;AACA,MAAMK,QAAQ,GAAGL,IAAI,KAAK,MAAT,GAAkB,OAAlB,GAA4B,MAA7C;;AAEA,OAAK,IAAMM,CAAX,IAAgBF,OAAhB,EAAyB;AACvBH,IAAAA,WAAW,CAACM,KAAZ,CAAkBC,WAAlB,CAA8BF,CAA9B,EAAiCF,OAAO,CAACE,CAAD,CAAxC;AACD;;AAEDL,EAAAA,WAAW,CAACQ,SAAZ,CAAsBC,MAAtB,CAA6BL,QAA7B;AACAJ,EAAAA,WAAW,CAACQ,SAAZ,CAAsBE,GAAtB,CAA0BX,IAA1B;AACD;AAED;AACA;AACA;AACA;AACA;;;AACA,eAAe,SAASY,SAAT,CAAoBZ,IAApB,EAA0B;AACvC,MAAIA,IAAI,KAAK,MAAb,EAAqB;AACnBD,IAAAA,MAAM,CAACC,IAAD,CAAN;AACA;AACD;;AAED,MAAMa,UAAU,GAAGC,MAAM,CAACC,UAAP,CAAkB,8BAAlB,EAAkDC,OAArE;AACA,MAAMC,WAAW,GAAGH,MAAM,CAACC,UAAP,CAAkB,+BAAlB,EAAmDC,OAAvE;AAEA,MAAIH,UAAJ,EAAgBd,MAAM,CAAC,MAAD,CAAN;AAChB,MAAIkB,WAAJ,EAAiBlB,MAAM,CAAC,OAAD,CAAN;;AAEjB,MAAI,CAACc,UAAD,IAAe,CAACI,WAApB,EAAiC;AAC/BC,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACA,QAAMC,IAAI,GAAG,IAAIC,IAAJ,GAAWC,QAAX,EAAb;AACA,QAAIF,IAAI,GAAG,CAAP,IAAYA,IAAI,IAAI,EAAxB,EAA4BrB,MAAM,CAAC,MAAD,CAAN,CAA5B,KACKA,MAAM,CAAC,OAAD,CAAN;AACN;AACF","sourcesContent":["import modeOptions from './modeOptions'\r\n\r\nfunction render (mode) {\r\n  const rootElement = document.querySelector(':root')\r\n  const options = modeOptions[mode]\r\n  const opposite = mode === 'dark' ? 'light' : 'dark'\r\n\r\n  for (const k in options) {\r\n    rootElement.style.setProperty(k, options[k])\r\n  }\r\n\r\n  rootElement.classList.remove(opposite)\r\n  rootElement.classList.add(mode)\r\n}\r\n\r\n/**\r\n * Sets a color scheme for the website.\r\n * If browser supports \"prefers-color-scheme\", 'auto' mode will respect the setting for light or dark mode\r\n * otherwise it will set a dark theme during night time\r\n */\r\nexport default function applyMode (mode) {\r\n  if (mode !== 'auto') {\r\n    render(mode)\r\n    return\r\n  }\r\n\r\n  const isDarkMode = window.matchMedia('(prefers-color-scheme: dark)').matches\r\n  const isLightMode = window.matchMedia('(prefers-color-scheme: light)').matches\r\n\r\n  if (isDarkMode) render('dark')\r\n  if (isLightMode) render('light')\r\n\r\n  if (!isDarkMode && !isLightMode) {\r\n    console.log('配色方案设置异常。我们已自动调整配色方案。')\r\n    const hour = new Date().getHours()\r\n    if (hour < 6 || hour >= 18) render('dark')\r\n    else render('light')\r\n  }\r\n}\r\n"]}]}