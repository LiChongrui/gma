{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[105],{645:function(t,s,a){\"use strict\";a.r(s);var e=a(9),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[a(\"h2\",{attrs:{id:\"io-readvector-infile-layerid-0-encoding-none-kwargs\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#io-readvector-infile-layerid-0-encoding-none-kwargs\"}},[t._v(\"#\")]),t._v(\" io.\"),a(\"strong\",[t._v(\"ReadVector\")]),t._v(\"(\"),a(\"em\",[t._v(\"InFile, LayerID = 0, Encoding = None, **kwargs\")]),t._v(\")\")]),t._v(\" \"),a(\"hr\"),t._v(\" \"),a(\"p\",[a(\"strong\",[t._v(\"功能：\")]),t._v(\"【读取矢量文件】。\")]),t._v(\" \"),a(\"p\",[a(\"strong\",[t._v(\"参数：\")])]),t._v(\" \"),a(\"p\",[t._v(\" InFile：\"),a(\"code\",[t._v(\"str\")]),t._v(\"。输入文件路径。\")]),t._v(\" \"),a(\"p\",[a(\"strong\",[t._v(\"可选参数：\")])]),t._v(\" \"),a(\"p\",[t._v(\" LayerID = \"),a(\"code\",[t._v(\"int\")]),t._v(\"。子图层序号。对于普通的矢量数据，只能为 0；对于多维矢量（例如 GPKG  等），可配置此参数，以打开不同的子图层。\")]),t._v(\" \"),a(\"p\",[t._v(\" Encoding = \"),a(\"code\",[t._v(\"str||None\")]),t._v(\" 。属性表字段的字符编码，默认自动（None）解码。\")]),t._v(\" \"),a(\"div\",{staticClass:\"custom-block tip\"},[a(\"p\",{staticClass:\"title\"},[t._v(\"提示\")]),a(\"p\",[t._v(\"当属性表乱码时，可以配置此参数，gma 会按照新的编码方式重新解码矢量属性表。\")])]),a(\"p\",[t._v(\" **kwargs：传递给 gdal.OpenEx 的其他参数。\")]),t._v(\" \"),a(\"p\",[a(\"strong\",[t._v(\"返回：\")]),t._v(\" \"),a(\"code\",[t._v(\"Layer\")]),t._v(\"。\")]),t._v(\" \"),a(\"p\",[a(\"em\",[a(\"strong\",[t._v(\" 类内属性/方法详见：\"),a(\"RouterLink\",{attrs:{to:\"/UserGuide/io/Layer.html\"}},[t._v(\"Layer\")]),t._v(\"。\")],1)])]),t._v(\" \"),a(\"hr\"),t._v(\" \"),a(\"p\",[a(\"strong\",[t._v(\"示例：\")]),a(\"em\",[t._v(\"（下载 \"),a(\"a\",{attrs:{href:\"/io/China_Province_2022.7z\"}},[t._v(\"示例矢量\")]),t._v(\"）\")])]),t._v(\" \"),a(\"div\",{staticClass:\"language-python line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-python\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"from\")]),t._v(\" gma \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"import\")]),t._v(\" io\\n\\nVO \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" io\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"ReadVector\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'China_Province_2022.shp'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"print\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"VO\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\")])]),t._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"4\")]),a(\"br\")])]),a(\"blockquote\",[a(\"p\",[t._v(\">>> <gma.algos.dataio.vesd.Layer at 0x......>\")])])])}),[],!1,null,null,null);s.default=n.exports}}]);","extractedComments":[]}