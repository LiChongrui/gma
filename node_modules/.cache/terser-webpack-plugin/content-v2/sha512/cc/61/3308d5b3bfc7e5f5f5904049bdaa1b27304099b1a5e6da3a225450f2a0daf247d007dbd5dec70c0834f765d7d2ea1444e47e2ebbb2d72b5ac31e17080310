{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{580:function(t,v,_){\"use strict\";_.r(v);var e=_(9),s=Object(e.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[_(\"p\",[_(\"strong\",[t._v(\"  系统交互\")]),t._v(\" 为 \"),_(\"strong\",[t._v(\"gma.osf\")]),t._v(\" 内所有文件系统操作相关函数的详细功能、参数设置和引用方法说明，如果您想了解 gma 所有函数的整体情况，请参考 \"),_(\"RouterLink\",{attrs:{to:\"/gma/Function.html\"}},[t._v(\"函数功能列表\")]),t._v(\" 。\")],1),t._v(\" \"),_(\"h2\",{attrs:{id:\"getpath\"}},[_(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#getpath\"}},[t._v(\"#\")]),t._v(\" GetPath\")]),t._v(\" \"),_(\"div\",{staticClass:\"custom-block theorem\"},[_(\"p\",{staticClass:\"title\"}),_(\"p\",[_(\"strong\",[t._v(\"引用：\")]),t._v(\" gma.osf.GetPath(Path, EXT = None, Include = None, Exclude = None, Search = 'FILE')\")]),t._v(\" \"),_(\"p\",[_(\"strong\",[t._v(\"功能：\")]),t._v(\"【获取路径】。获取目标路径或路径集合下满足条件的所有文件夹和文件路径。\")]),t._v(\" \"),_(\"p\",[_(\"strong\",[t._v(\"参数：\")])]),t._v(\" \"),_(\"p\",[t._v(\" Path：\"),_(\"code\",[t._v(\"str||list\")]),t._v(\"。路径或路径集合。\")]),t._v(\" \"),_(\"Boxx\",{attrs:{type:\"tips\",title:\"示例\",content:'1. Path = \"C:/SP\"</br>2. Path = [\"C:/SD\", \"C:/SP\"]'}}),t._v(\" \"),_(\"p\",[_(\"strong\",[t._v(\"可选参数：\")])]),t._v(\" \"),_(\"p\",[t._v(\" EXT = \"),_(\"code\",[t._v(\"str||list\")]),t._v(\"。查找文件的扩展名或扩展名列表。默认查找所有文件（None）。\")]),t._v(\" \"),_(\"Boxx\",{attrs:{type:\"warning\",title:\"注意\",content:'只有在 SearchPath = \"FILE\" 时, 此参数才生效。'}}),t._v(\" \"),_(\"p\",[t._v(\" Include = \"),_(\"code\",[t._v(\"str||list\")]),t._v(\"。查找的文件路径中包含的字符串 。默认返回全部结果（None）。\")]),t._v(\" \"),_(\"p\",[t._v(\" Exclude = \"),_(\"code\",[t._v(\"str||list\")]),t._v(\"。查找的文件路径中包含的字符串 。默认返回全部结果（None）。\")]),t._v(\" \"),_(\"Boxx\",{attrs:{type:\"tips\",title:\"提示\",content:\"1. 如果 Include（Exclude）为字符串，则包含设置值的路径才会被保留（排除）。<br>2. 如果 Include（Exclude）为列表，则包含列表内任意一个字符串的路径都会被保留（排除）。\"}}),t._v(\" \"),_(\"p\",[t._v(\" Search = \"),_(\"code\",[t._v(\"str\")]),t._v(\"。要查找路径的类型。可为\"),_(\"code\",[t._v(\"FILE\")]),t._v(\"（文件），\"),_(\"code\",[t._v(\"DIR\")]),t._v(\"（文件夹），\"),_(\"code\",[t._v(\"ALL\")]),t._v(\"（文件夹和文件），默认为 FILE 。\")]),t._v(\" \"),_(\"p\",[_(\"strong\",[t._v(\"返回：\")]),_(\"code\",[t._v(\"list\")]),t._v(\"。满足条件的所有【文件夹和文件路径】集合。重复的路径只会保留一个。\")])],1),_(\"h2\",{attrs:{id:\"zip\"}},[_(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#zip\"}},[t._v(\"#\")]),t._v(\" Zip\")]),t._v(\" \"),_(\"div\",{staticClass:\"custom-block theorem\"},[_(\"p\",{staticClass:\"title\"}),_(\"p\",[_(\"strong\",[t._v(\"引用：\")]),t._v(\" gma.osf.Zip(Path, ZipFilePath, Mode = 'w')\")]),t._v(\" \"),_(\"p\",[_(\"strong\",[t._v(\"功能：\")]),t._v(\"【压缩】。将目标路径下所有文件压缩为 .zip 文件。\")]),t._v(\" \"),_(\"p\",[_(\"strong\",[t._v(\"参数：\")])]),t._v(\" \"),_(\"p\",[t._v(\" Path：\"),_(\"code\",[t._v(\"str\")]),t._v(\"。压缩目标路径。\")]),t._v(\" \"),_(\"p\",[t._v(\" ZipFilePath：\"),_(\"code\",[t._v(\"str\")]),t._v(\"。压缩结果文件路径。扩展名为 .zip。\")]),t._v(\" \"),_(\"p\",[_(\"strong\",[t._v(\"可选参数：\")])]),t._v(\" \"),_(\"p\",[t._v(\"  Mode = \"),_(\"code\",[t._v(\"str\")]),t._v(\" 。压缩文件处理方法。默认为覆盖（w）。\")]),t._v(\" \"),_(\"Boxx\",{attrs:{type:\"tips\",title:\"可接受的处理方法\",content:\"w：如果目标 .zip 存在，则目标文件将会被替换。<br>a：如果目标 .zip 存在，则目标文件内容会被更新。\"}})],1),_(\"h2\",{attrs:{id:\"unzip\"}},[_(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#unzip\"}},[t._v(\"#\")]),t._v(\" UnZip\")]),t._v(\" \"),_(\"div\",{staticClass:\"custom-block theorem\"},[_(\"p\",{staticClass:\"title\"}),_(\"p\",[_(\"strong\",[t._v(\"引用：\")]),t._v(\" gma.osf.UnZip(ZipFilePath, OutPath)\")]),t._v(\" \"),_(\"p\",[_(\"strong\",[t._v(\"功能：\")]),t._v(\"【解压缩】。解压缩 .zip 文件。\")]),t._v(\" \"),_(\"p\",[_(\"strong\",[t._v(\"参数：\")])]),t._v(\" \"),_(\"p\",[t._v(\" ZipFilePath：\"),_(\"code\",[t._v(\"str\")]),t._v(\"。需要解压缩的 .zip 文件路径。\")]),t._v(\" \"),_(\"p\",[t._v(\" OutPath：\"),_(\"code\",[t._v(\"str\")]),t._v(\"。解压后存储文件的路径。\")])]),_(\"h2\",{attrs:{id:\"dateseries\"}},[_(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#dateseries\"}},[t._v(\"#\")]),t._v(\" DateSeries\")]),t._v(\" \"),_(\"div\",{staticClass:\"custom-block theorem\"},[_(\"p\",{staticClass:\"title\"}),_(\"p\",[_(\"strong\",[t._v(\"引用：\")]),t._v(\" gma.osf.DateSeries(StartDate, EndDate, DateDelta, Format = '%Y%m%d')\")]),t._v(\" \"),_(\"p\",[_(\"strong\",[t._v(\"功能：\")]),t._v(\"【日期序列】。构造一个日期序列列表。\")]),t._v(\" \"),_(\"p\",[_(\"strong\",[t._v(\"参数：\")])]),t._v(\" \"),_(\"p\",[t._v(\" StartDate：\"),_(\"code\",[t._v(\"str\")]),t._v(\"。初始日期。例如 '20200101' 。\")]),t._v(\" \"),_(\"p\",[t._v(\" EndDate：\"),_(\"code\",[t._v(\"str\")]),t._v(\"。结束日期。例如 '20201231' 。\")]),t._v(\" \"),_(\"p\",[t._v(\" DateDelta：\"),_(\"code\",[t._v(\"int\")]),t._v(\"。间隔日期（天）。\")]),t._v(\" \"),_(\"p\",[_(\"strong\",[t._v(\"可选参数：\")])]),t._v(\" \"),_(\"p\",[t._v(\" Format = \"),_(\"code\",[t._v(\"str\")]),t._v(\"。日期序列格式。默认为 '%Y%m%d'（年月日）。\")]),t._v(\" \"),_(\"p\",[_(\"strong\",[t._v(\"返回：\")]),_(\"code\",[t._v(\"list\")]),t._v(\"。\")])]),_(\"h2\",{attrs:{id:\"rename-类\"}},[_(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#rename-类\"}},[t._v(\"#\")]),t._v(\" Rename 类\")]),t._v(\" \"),_(\"div\",{staticClass:\"custom-block theorem\"},[_(\"p\",{staticClass:\"title\"}),_(\"p\",[_(\"strong\",[t._v(\"引用：\")]),t._v(\" gma.index.Rename(FilePath)\")]),t._v(\" \"),_(\"p\",[_(\"strong\",[t._v(\"功能：\")]),t._v(\"【重命名】文件或文件夹。\")]),t._v(\" \"),_(\"p\",[_(\"strong\",[t._v(\"初始化：\")])]),t._v(\" \"),_(\"p\",[t._v(\" FilePath：\"),_(\"code\",[t._v(\"str\")]),t._v(\"。要重命名的文件或文件夹路径。\")])]),_(\"div\",{staticClass:\"custom-block warning\"},[_(\"p\",{staticClass:\"title\"},[t._v(\"注意\")]),_(\"p\",[t._v(\"类内函数引用前请先初始化 \"),_(\"code\",[t._v(\"Rename\")]),t._v(\" 类！\")])]),_(\"h3\",{attrs:{id:\"modify\"}},[_(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#modify\"}},[t._v(\"#\")]),t._v(\" Modify\")]),t._v(\" \"),_(\"div\",{staticClass:\"custom-block theorem\"},[_(\"p\",{staticClass:\"title\"}),_(\"p\",[_(\"strong\",[t._v(\"引用：\")]),t._v(\" gma.index.Rename().Modify(NewName):\")]),t._v(\" \"),_(\"p\",[t._v(\"   注意：\"),_(\"em\",[t._v(\"引用前请先初始化 \"),_(\"code\",[t._v(\"Rename\")]),t._v(\" 类。\")])]),t._v(\" \"),_(\"p\",[_(\"strong\",[t._v(\"功能：\")]),t._v(\"【修改】。将原有文件（夹）名修改为新名。\")]),t._v(\" \"),_(\"p\",[_(\"strong\",[t._v(\"参数：\")])]),t._v(\" \"),_(\"p\",[t._v(\" NewName：\"),_(\"code\",[t._v(\"str\")]),t._v(\"。新文件或文件夹名。\")])]),_(\"h3\",{attrs:{id:\"replace\"}},[_(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#replace\"}},[t._v(\"#\")]),t._v(\" Replace\")]),t._v(\" \"),_(\"div\",{staticClass:\"custom-block theorem\"},[_(\"p\",{staticClass:\"title\"}),_(\"p\",[_(\"strong\",[t._v(\"引用：\")]),t._v(\" gma.index.Rename().Replace(OldString, NewString)\")]),t._v(\" \"),_(\"p\",[t._v(\"   注意：\"),_(\"em\",[t._v(\"引用前请先初始化 \"),_(\"code\",[t._v(\"Rename\")]),t._v(\" 类。\")])]),t._v(\" \"),_(\"p\",[_(\"strong\",[t._v(\"功能：\")]),t._v(\"【替换】。替换原文件（夹）名中字符串后作为新文件（夹）名。\")]),t._v(\" \"),_(\"p\",[_(\"strong\",[t._v(\"参数：\")])]),t._v(\" \"),_(\"p\",[t._v(\" OldString：\"),_(\"code\",[t._v(\"str\")]),t._v(\"。需要替换的字符串。\")]),t._v(\" \"),_(\"p\",[t._v(\" NewString：\"),_(\"code\",[t._v(\"str\")]),t._v(\"。替换后的新字符串。\")])]),_(\"h3\",{attrs:{id:\"intercept\"}},[_(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#intercept\"}},[t._v(\"#\")]),t._v(\" Intercept\")]),t._v(\" \"),_(\"div\",{staticClass:\"custom-block theorem\"},[_(\"p\",{staticClass:\"title\"}),_(\"p\",[_(\"strong\",[t._v(\"引用：\")]),t._v(\" gma.index.Rename().Intercept(Start, Length)\")]),t._v(\" \"),_(\"p\",[t._v(\"   注意：\"),_(\"em\",[t._v(\"引用前请先初始化 \"),_(\"code\",[t._v(\"Rename\")]),t._v(\" 类。\")])]),t._v(\" \"),_(\"p\",[_(\"strong\",[t._v(\"功能：\")]),t._v(\"【截取】。截取文件（夹）名中的部分字符串作为新文件（夹）名。\")]),t._v(\" \"),_(\"p\",[t._v(\"   注意：\"),_(\"em\",[t._v(\"此方法自动忽略扩展名。即：不论 Start, Length设置为多少，扩展名都将被保留。\")])]),t._v(\" \"),_(\"p\",[_(\"strong\",[t._v(\"参数：\")])]),t._v(\" \"),_(\"p\",[t._v(\" Start：\"),_(\"code\",[t._v(\"int\")]),t._v(\"。截取字符串的初始位置。\")]),t._v(\" \"),_(\"p\",[t._v(\" Length：\"),_(\"code\",[t._v(\"int\")]),t._v(\"。截取字符串的长度。\")])]),_(\"h2\",{attrs:{id:\"multithreading\"}},[_(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#multithreading\"}},[t._v(\"#\")]),t._v(\" MultiThreading\"),_(\"Badge\",{attrs:{text:\"1.0.3 +\"}})],1),t._v(\" \"),_(\"div\",{staticClass:\"custom-block theorem\"},[_(\"p\",{staticClass:\"title\"}),_(\"p\",[_(\"strong\",[t._v(\"引用：\")]),t._v(\" gma.osf.MultiThreading(Function, MTParameters, THNumber='ALL_CPUS', *args, **kwargs)\")]),t._v(\" \"),_(\"p\",[_(\"strong\",[t._v(\"功能：\")]),t._v(\"【多线程】。创建多个线程，实现同一函数多个参数的同步执行。\")]),t._v(\" \"),_(\"p\",[_(\"strong\",[t._v(\"参数：\")])]),t._v(\" \"),_(\"p\",[t._v(\" Function：\"),_(\"code\",[t._v(\"def||接受传参的可执行程序（命令）\")]),t._v(\"。需要多线程执行的函数或程序（命令）。\")]),t._v(\" \"),_(\"p\",[t._v(\" MTParameters：\"),_(\"code\",[t._v(\"list\")]),t._v(\"。需要分别带入 Function 的参数集合。\")]),t._v(\" \"),_(\"p\",[_(\"strong\",[t._v(\"可选参数：\")])]),t._v(\" \"),_(\"p\",[t._v(\" THNumber =  \"),_(\"code\",[t._v(\"int||ALL_CPUS\")]),t._v(\"。线程数，默认是所有 逻辑 CPU 核心数（ALL_CPUS）。\")]),t._v(\" \"),_(\"p\",[t._v(\" *args：\"),_(\"code\",[t._v(\"Function 的固定参数\")]),t._v(\"。传递给 Function 的不变参数。从 Function 的第一个开始固定。\")]),t._v(\" \"),_(\"p\",[t._v(\" **kwargs：\"),_(\"code\",[t._v(\"Function 的可选参数'\")]),t._v(\"。传递给 Function 的不变可选参数。\")]),t._v(\" \"),_(\"p\",[_(\"strong\",[t._v(\"返回：\")]),t._v(\" \"),_(\"code\",[t._v(\"list\")]),t._v(\"。每个参数带入 Function 执行后的返回值列表。与 MTParameters 的顺序一致。\")])])])}),[],!1,null,null,null);v.default=s.exports}}]);","extractedComments":[]}